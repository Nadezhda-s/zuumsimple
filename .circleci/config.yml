# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  jq: circleci/jq@2.2.0
  newman: postman/newman@0.0.2
# 
jobs:
  newman-collection-run:
    parameters:
      environms:
        description: project environments
        default: "'14096194-232d230d-7d84-4e62-840e-276098f18a42' '14096194-747dceb4-778a-4653-9566-22572ff9c169'"
        type: string
    executor: newman/postman-newman-docker
    steps:      
      - checkout       
      - run:          
          name: Validate terraform code
          command: |
            apk add --update jq curl curl-dev |
            npm i newman |     
            #echo "my artifact file" > /tmp/artifacts-tests;       
            #mkdir -p /tmp/test-results/;  
            #echo "my artifact files in a dir" > /tmp/artifacts-tests;
            printf "SRART code\n"            
            c_line=1
            COLLECTIONS=$(eval `echo "curl --silent --location --request GET \"https://api.getpostman.com/workspaces/$WORKSPACE\" --header \"X-API-Key: $API_KEY\"| jq -r '.workspace.collections[]'"`)
            ENVS=$(eval `echo "curl --silent --location --request GET \"https://api.getpostman.com/workspaces/$WORKSPACE\" --header \"X-API-Key: $API_KEY\"| jq -r '.workspace.environments[]'"`)
                       
            E_CNT=$(echo $ENVS | jq -s '.' | jq length)
            echo $E_CNT
            CNT=$(echo $COLLECTIONS | jq -s '.' | jq length)
            echo $CURRENT_COLLECTIONS
            ce_index=0
            while [ $ce_index -lt $(expr $E_CNT) ]; do              
              ecode=$(echo "echo \$ENVS | jq '{id, name}' | jq -s '.' | jq -r '.[${ce_index}] | \"\(.id)\\t\(.name)\"'")                
              ec=$(eval "$ecode")              
              eid=$(echo $ec | cut -d' ' -f1)
              ename=$(echo $ec | cut -d' ' -f2-)
              if [ "$ename" = "$ENVIRONMENT" ]; then                
                env_test=$eid
              fi;              
              ce_index=$(expr $ce_index + 1) 
            done;

            CURRENT_CNT=$(echo ${CURRENT_COLLECTIONS} | awk -F ';' '{print NF}')
            echo "Number of Postman collections: $CNT"
            echo "Number of current collections: $CURRENT_CNT"
            #echo "Current collections: " 
            echo "" > /tmp/artifacts-tests         
            c_index=0
            #echo "##################################"
            while [ $c_index -lt $(expr $CNT + 1) ]; do              
              code=$(echo "echo \$COLLECTIONS | jq '{id, name}' | jq -s '.' | jq -r '.[${c_index}] | \"\(.id)\\t\(.name)\"'")                
              c=$(eval "$code")
              #echo "Collection: $c"
              id=$(echo $c | cut -d' ' -f1)
              name=$(echo $c | cut -d' ' -f2-)
              #echo "   -- ID:   ${id}"
              #echo "   -- Name: ${name}"
              cc_index=1
              while [ $cc_index -lt $(expr $CURRENT_CNT + 1) ]; do
                code=$(echo "echo \${CURRENT_COLLECTIONS} | awk -F ';' '{ print $"${cc_index} "}'")
                cc=$(eval "$code")
                #echo "  -- CUR_NAME: ${cc}"
                if [ "$name" = "$cc" ]; then    
                  echo "Running Postman collection: ${name}..."            	
                  newman run https://api.getpostman.com/collections/$id?apikey=$API_KEY --environment https://api.getpostman.com/environments/$env_test?apikey=$API_KEY >> /tmp/artifacts-tests
                  echo "Postman command exit code: " $?
                  #echo "COLLECTION FOUND!!! ${cc}"
                fi;                
                cc_index=$(expr $cc_index + 1)
              done
              c_index=$(expr $c_index + 1)              
            done;
            
      - store_artifacts:
          path: /tmp/artifacts-tests
      - store_test_results:
          path: /tmp/test-results/
          destination: test    

# Orchestrate or schedule a set of jobs
workflows:
  version: 2
  Some Random Workflow:
    jobs:
      - newman-collection-run  
